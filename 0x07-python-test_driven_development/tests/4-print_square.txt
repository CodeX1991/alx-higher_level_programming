----------------------------------------------
A module that print sqaure area using # symbol
----------------------------------------------

Import module:
--------------
	>>> print_square = __import__('4-print_square').print_square


Funtion:
--------
Write a function tha print a square with the character #

Operations:
-----------
* size is the size length of the square

* size must be an integer, otherwise raise a TypeError exception
with the message size must be an integer

* if size is less than 0, raise a ValueError exception
with the message size must be >= 0

* if size is a float and is less than 0, raise a TypeError exception
with the message size must be an integer


Section // Non-parameter
------------------------

Test case #0: A test case without parameters

	>>> print_square()
	Traceback (most recent call last):
	TypeError: print_sqaur() missing 1 required positional argument: 'size'


Section // Correct Param
------------------------

Test case #1: A test case with valid param

	>>> print_sqaure(3)
	###
	###
	###

Test case #2: A test case with big valid param

	>>> print_sqaure(10)
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
Test case #3: A test case with zero param

	>>> print_sqaure(0)
	


Section // Wrong Param
----------------------

Test case #4: A test case with infinite float param

	>>> print_square(1e400)
	Traceback (most recent call last):
	TypeError: size must be an integer

Test case #5: A test case with -ve infinite float param

	>>> print_square(-1e400)
	Traceback (most recent call last):
	TypeError: size must be an integer

Test case #6: A test case with string entering

	>>> print_sqaure("Holy")
	Traceback (most recent call last):
	TypeError: size must be an integer

Test case #7: A test case with -ve integer

	>>> print_sqaure(-56)
	TraceError (most recent call last)
	TypeError: size must be >= 0
